# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ai-pet"
version = "0.1.0"
description = "Awesome `ai-pet` is an AI pet chat"
readme = "README.md"
authors = ["andeya <andeyalee@outlook.com>"]
license = "Apache Software License 2.0"
repository = "https://github.com/andeya/ai-pet"
homepage = "https://github.com/andeya/ai-pet"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [] #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [ #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"ai-pet" = "ai_pet.__main__:app"

[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.9"

typer = { extras = ["all"], version = "^0.4.0" }
rich = "^10.14.0"

[tool.poetry.dev-dependencies]
packaging = "^23.1"
poetry-plugin-export = "^1.7.1"
pytest = "^8.1.1"
pytest-html = "^4.1.1"
pytest-cov = "^5.0.0"
bandit = "^1.7.1"
ruff = "^0.1.6"
pre-commit = "^2.21.0"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
safety = "^2.3.5"
darglint = "^1.8.1"


[tool.ruff]
# https://beta.ruff.rs/docs/settings/
# https://docs.astral.sh/ruff/configuration/
line-length = 88

# https://beta.ruff.rs/docs/rules/
select = ["E", "W", "F", "I"]
extend-select = ["I"]
ignore = ["F401"]

# Exclude a variety of commonly ignored directories.
respect-gitignore = true
ignore-init-module-imports = true
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = [
  "hooks",
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
]
doctest_optionflags = [
  "NUMBER",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

# [tool.coverage.run]
# source = ["tests"]

# [coverage.paths]
# source = "ai-pet"

# [coverage.run]
# branch = true

# [coverage.report]
# fail_under = 50
# show_missing = true
